// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // 账户id
  userID      String        @id @default(uuid())
  // 邮箱
  email       String        @unique
  password    String?
  // 命名空间
  namespace   String        @unique @default(uuid())
  // 显示名称
  displayName String?
  avatarURL   String?
  // 地区
  location    String        @default("us")
  // 账户类型
  type        String        @default("user")
  // 创建时间
  createdAt   DateTime      @default(now())
  AccessToken AccessToken[]
  Product     Product[]
  Order       Order[]
  Item        Item[]
  Cart        Cart[]
}

// 物品
model Item {
  itemID    String   @id @default(cuid())
  owner     User     @relation(fields: [ownerID], references: [userID])
  // 所有者id
  ownerID   String
  // 数量
  count     Int      @default(1)
  // 创建时间
  createdAt DateTime @default(now())
  product   Product? @relation(fields: [productID], references: [productID])
  // 产品
  productID String?
}

// 购物车内容
model Cart {
  cardID String @id @default(cuid())

  user   User   @relation(fields: [userID], references: [userID])
  userID String

  Product   Product? @relation(fields: [productID], references: [productID])
  productID String?

  count Int @default(1)
}

model AccessToken {
  user      User      @relation(fields: [userID], references: [userID])
  // 账户id
  userID    String
  // 原始令牌
  token     String    @id @default(uuid())
  // 创建时间
  createAt  DateTime  @default(now())
  // 过期时间
  expiresAt DateTime?
}

// 产品
model Product {
  user         User           @relation(fields: [authorID], references: [userID])
  // 作者id
  authorID     String
  // 产品id
  productID    String         @id
  // 名称
  name         String
  // 头像url
  avatarURL    String?
  // 描述
  summary      String?
  // 价格
  price        Decimal        @db.Decimal(10, 2)
  // 评价
  comment      Float
  // 标签
  labels       String[]
  // 开放者
  deverlopers  String[]
  // 发行商
  issuers      String[]
  // 类型
  type         String         @default("game")
  OrderDetails OrderDetails[]
  Cart         Cart[]
  Item         Item[]
}

// 订单
model Order {
  // 订单号
  orderID      Int            @id @default(autoincrement())
  // 下单时间
  orderDate    DateTime       @default(now())
  user         User           @relation(fields: [userID], references: [userID])
  // 下单账户
  userID       String
  // 非下单账户的收货id
  toID         String?
  // 状态
  // 待付款: pending
  // 正常完成: completed
  // 已退款: refunded
  status       String         @default("pending")
  // 总金额
  total        Decimal        @db.Decimal(10, 2)
  OrderDetails OrderDetails[]
}

model OrderDetails {
  orderDetailsID String  @id @default(cuid())
  order          Order   @relation(fields: [orderID], references: [orderID])
  // 订单号
  orderID        Int
  product        Product @relation(fields: [productID], references: [productID])
  // 商品号
  productID      String
  // 数量
  count          Int     @default(1)
}
